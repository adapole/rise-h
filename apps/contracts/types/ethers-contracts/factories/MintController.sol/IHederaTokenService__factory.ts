/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { IHederaTokenService, IHederaTokenServiceInterface } from "../../MintController.sol/IHederaTokenService.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "internalType": "uint64",
        "name": "amount",
        "type": "uint64"
      },
      {
        "internalType": "bytes[]",
        "name": "metadata",
        "type": "bytes[]"
      }
    ],
    "name": "mintToken",
    "outputs": [
      {
        "internalType": "int64",
        "name": "responseCode",
        "type": "int64"
      },
      {
        "internalType": "uint64",
        "name": "newTotalSupply",
        "type": "uint64"
      },
      {
        "internalType": "int64[]",
        "name": "serialNumbers",
        "type": "int64[]"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  export class IHederaTokenService__factory {
    static readonly abi = _abi;
    static createInterface(): IHederaTokenServiceInterface {
      return new Interface(_abi) as IHederaTokenServiceInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): IHederaTokenService {
      return new Contract(address, _abi, runner) as unknown as IHederaTokenService;
    }
  }
  