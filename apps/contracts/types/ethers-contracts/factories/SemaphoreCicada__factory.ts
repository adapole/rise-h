/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { SemaphoreCicada, SemaphoreCicadaInterface } from "../SemaphoreCicada.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_semaphore",
        "type": "address"
      },
      {
        "internalType": "uint256",
        "name": "_groupId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_votingDurationSeconds",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "_timelockDelaySeconds",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "nullifier",
        "type": "uint256"
      }
    ],
    "name": "DuplicateNullifier",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidBallot",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "groupId",
        "type": "uint256"
      }
    ],
    "name": "InvalidGroupId",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidProofOfExponentiation",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidPuzzleSolution",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "InvalidStartTime",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ParametersHashMismatch",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "Semaphore__InvalidProof",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "Semaphore__YouAreUsingTheSameNullifierTwice",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "depth",
        "type": "uint256"
      }
    ],
    "name": "UnsupportedMerkleTreeDepth",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "VoteAlreadyFinalized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "VoteHasNotEnded",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "VoteIsNotOngoing",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "VotingNotFinalized",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ZeroSemaphoreAddress",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "uint256",
        "name": "nullifier",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "bytes",
        "name": "ciphertext",
        "type": "bytes"
      }
    ],
    "name": "BallotSubmitted",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "yes",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "no",
        "type": "uint256"
      }
    ],
    "name": "TallyFinalized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "voteId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "description",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "startTime",
        "type": "uint64"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "endTime",
        "type": "uint64"
      },
      {
        "components": [
          {
            "internalType": "uint256[4]",
            "name": "N",
            "type": "uint256[4]"
          },
          {
            "internalType": "uint256",
            "name": "T",
            "type": "uint256"
          },
          {
            "internalType": "uint256[4]",
            "name": "g",
            "type": "uint256[4]"
          },
          {
            "internalType": "uint256[4]",
            "name": "h",
            "type": "uint256[4]"
          },
          {
            "internalType": "uint256[4]",
            "name": "y",
            "type": "uint256[4]"
          },
          {
            "internalType": "uint256[4]",
            "name": "yInv",
            "type": "uint256[4]"
          }
        ],
        "indexed": false,
        "internalType": "struct CicadaVote.PublicParameters",
        "name": "pp",
        "type": "tuple"
      }
    ],
    "name": "VoteCreated",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "voteId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "numYesVotes",
        "type": "uint64"
      },
      {
        "indexed": false,
        "internalType": "uint64",
        "name": "numNoVotes",
        "type": "uint64"
      }
    ],
    "name": "VoteFinalized",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [],
    "name": "VotingExecuted",
    "type": "event"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "ballots",
    "outputs": [
      {
        "internalType": "bytes",
        "name": "ciphertext",
        "type": "bytes"
      },
      {
        "internalType": "uint256",
        "name": "nullifier",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "ballotsCount",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "canFinalize",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "executeResult",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "yes",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "no",
        "type": "uint256"
      }
    ],
    "name": "finalizeTally",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "finalized",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "groupId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nextVoteId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "nullifierUsed",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "semaphore",
    "outputs": [
      {
        "internalType": "contract ISemaphore",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "merkleTreeDepth",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "merkleTreeRoot",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "nullifier",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "message",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "scope",
            "type": "uint256"
          },
          {
            "internalType": "uint256[8]",
            "name": "points",
            "type": "uint256[8]"
          }
        ],
        "internalType": "struct ISemaphore.SemaphoreProof",
        "name": "proof",
        "type": "tuple"
      },
      {
        "internalType": "bytes",
        "name": "encryptedBallot",
        "type": "bytes"
      }
    ],
    "name": "submitVote",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "timelockDelaySeconds",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalNo",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalYes",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "votes",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "parametersHash",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "uint256[4]",
            "name": "u",
            "type": "uint256[4]"
          },
          {
            "internalType": "uint256[4]",
            "name": "v",
            "type": "uint256[4]"
          }
        ],
        "internalType": "struct CicadaVote.Puzzle",
        "name": "tally",
        "type": "tuple"
      },
      {
        "internalType": "uint64",
        "name": "numVotes",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "startTime",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "endTime",
        "type": "uint64"
      },
      {
        "internalType": "bool",
        "name": "isFinalized",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "votingEndTime",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60a060405260015f55348015610013575f5ffd5b5060405161188e38038061188e833981810160405281019061003591906101dd565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361009a576040517ff89334c900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f608051036100e2576080516040517f7f4514bd0000000000000000000000000000000000000000000000000000000081526004016100d99190610250565b60405180910390fd5b8360095f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550826080818152505081426101369190610296565b60028190555080600381905550505050506102c9565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61017982610150565b9050919050565b6101898161016f565b8114610193575f5ffd5b50565b5f815190506101a481610180565b92915050565b5f819050919050565b6101bc816101aa565b81146101c6575f5ffd5b50565b5f815190506101d7816101b3565b92915050565b5f5f5f5f608085870312156101f5576101f461014c565b5b5f61020287828801610196565b9450506020610213878288016101c9565b9350506040610224878288016101c9565b9250506060610235878288016101c9565b91505092959194509250565b61024a816101aa565b82525050565b5f6020820190506102635f830184610241565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6102a0826101aa565b91506102ab836101aa565b92508282019050808211156102c3576102c2610269565b5b92915050565b6080516115a66102e85f395f818161039c01526109c301526115a65ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c80638732f91811610095578063ad40a84411610064578063ad40a8441461028e578063af008883146102ac578063b3f05b97146102ca578063e207d04d146102e8576100fe565b80638732f9181461022c57806388ba8dd614610236578063925aaec014610254578063a0f44c9214610270576100fe565b80635df81330116100d15780635df813301461018b57806371e28126146101c057806379f95ee9146101de5780637b5d25341461020e576100fe565b80631ea736e01461010257806343b5776814610120578063552ea7b51461013e5780635c632b381461015a575b5f5ffd5b61010a610306565b6040516101179190610a20565b60405180910390f35b61012861030c565b6040516101359190610a20565b60405180910390f35b61015860048036038101906101539190610ac5565b610318565b005b610174600480360381019061016f9190610b4e565b6105c0565b604051610182929190610be9565b60405180910390f35b6101a560048036038101906101a09190610b4e565b610675565b6040516101b796959493929190610d3e565b60405180910390f35b6101c8610788565b6040516101d59190610da2565b60405180910390f35b6101f860048036038101906101f39190610b4e565b6107b9565b6040516102059190610da2565b60405180910390f35b6102166107d6565b6040516102239190610e35565b60405180910390f35b6102346107fb565b005b61023e610877565b60405161024b9190610a20565b60405180910390f35b61026e60048036038101906102699190610e4e565b61087d565b005b6102786109c1565b6040516102859190610a20565b60405180910390f35b6102966109e5565b6040516102a39190610a20565b60405180910390f35b6102b46109eb565b6040516102c19190610a20565b60405180910390f35b6102d26109f1565b6040516102df9190610da2565b60405180910390f35b6102f0610a03565b6040516102fd9190610a20565b60405180910390f35b60025481565b5f600880549050905090565b600254421061035c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035390610ee6565b60405180910390fd5b5f60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663456f41887f0000000000000000000000000000000000000000000000000000000000000000866040518363ffffffff1660e01b81526004016103d9929190610fe8565b602060405180830381865afa1580156103f4573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610418919061103a565b905080610451576040517f4aa6bc4000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8460400135905060075f8281526020019081526020015f205f9054906101000a900460ff16156104ae576040517f208b15e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600160075f8381526020019081526020015f205f6101000a81548160ff0219169083151502179055506008604051806040016040528086868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505081526020018760400135815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f01908161056e9190611286565b5060208201518160010155505084604001357f4d4332fc4d0ddcf0c281bb3c151bdd45a82fc4994a52ad569dd4322aac0f746985856040516105b192919061138f565b60405180910390a25050505050565b600881815481106105cf575f80fd5b905f5260205f2090600202015f91509050805f0180546105ee906110bf565b80601f016020809104026020016040519081016040528092919081815260200182805461061a906110bf565b80156106655780601f1061063c57610100808354040283529160200191610665565b820191905f5260205f20905b81548152906001019060200180831161064857829003601f168201915b5050505050908060010154905082565b6001602052805f5260405f205f91509050805f015490806001016040518060400160405290815f82016004806020026040519081016040528092919082600480156106d5576020028201915b8154815260200190600101908083116106c1575b505050505081526020016004820160048060200260405190810160405280929190826004801561071a576020028201915b815481526020019060010190808311610706575b50505050508152505090806009015f9054906101000a900467ffffffffffffffff16908060090160089054906101000a900467ffffffffffffffff16908060090160109054906101000a900467ffffffffffffffff16908060090160189054906101000a900460ff16905086565b5f60035460025461079991906113de565b42101580156107b4575060045f9054906101000a900460ff16155b905090565b6007602052805f5260405f205f915054906101000a900460ff1681565b60095f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045f9054906101000a900460ff16610849576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108409061145b565b60405180910390fd5b7f814ff78885dbb8a7fc58b86ba7222a834a89ff43c883debd5e3e0620c715b06960405160405180910390a1565b60055481565b610885610788565b6108bb576040517fd38f329100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6003546002546108cb91906113de565b42101561090d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610904906114c3565b60405180910390fd5b60045f9054906101000a900460ff161561095c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109539061152b565b60405180910390fd5b600160045f6101000a81548160ff02191690831515021790555081600581905550806006819055507fb8e473e31c53dbbcf4ca16a6aa5db7b1007e610d2a1eab4416f297c70506f27782826040516109b5929190611549565b60405180910390a15050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60035481565b60065481565b60045f9054906101000a900460ff1681565b5f5481565b5f819050919050565b610a1a81610a08565b82525050565b5f602082019050610a335f830184610a11565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f6101a08284031215610a5b57610a5a610a41565b5b81905092915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f840112610a8557610a84610a64565b5b8235905067ffffffffffffffff811115610aa257610aa1610a68565b5b602083019150836001820283011115610abe57610abd610a6c565b5b9250929050565b5f5f5f6101c08486031215610add57610adc610a39565b5b5f610aea86828701610a45565b9350506101a084013567ffffffffffffffff811115610b0c57610b0b610a3d565b5b610b1886828701610a70565b92509250509250925092565b610b2d81610a08565b8114610b37575f5ffd5b50565b5f81359050610b4881610b24565b92915050565b5f60208284031215610b6357610b62610a39565b5b5f610b7084828501610b3a565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610bbb82610b79565b610bc58185610b83565b9350610bd5818560208601610b93565b610bde81610ba1565b840191505092915050565b5f6040820190508181035f830152610c018185610bb1565b9050610c106020830184610a11565b9392505050565b5f819050919050565b610c2981610c17565b82525050565b5f60049050919050565b5f81905092915050565b5f819050919050565b610c5581610a08565b82525050565b5f610c668383610c4c565b60208301905092915050565b5f602082019050919050565b610c8781610c2f565b610c918184610c39565b9250610c9c82610c43565b805f5b83811015610ccc578151610cb38782610c5b565b9650610cbe83610c72565b925050600181019050610c9f565b505050505050565b61010082015f820151610ce95f850182610c7e565b506020820151610cfc6080850182610c7e565b50505050565b5f67ffffffffffffffff82169050919050565b610d1e81610d02565b82525050565b5f8115159050919050565b610d3881610d24565b82525050565b5f6101a082019050610d525f830189610c20565b610d5f6020830188610cd4565b610d6d610120830187610d15565b610d7b610140830186610d15565b610d89610160830185610d15565b610d97610180830184610d2f565b979650505050505050565b5f602082019050610db55f830184610d2f565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f610dfd610df8610df384610dbb565b610dda565b610dbb565b9050919050565b5f610e0e82610de3565b9050919050565b5f610e1f82610e04565b9050919050565b610e2f81610e15565b82525050565b5f602082019050610e485f830184610e26565b92915050565b5f5f60408385031215610e6457610e63610a39565b5b5f610e7185828601610b3a565b9250506020610e8285828601610b3a565b9150509250929050565b5f82825260208201905092915050565b7f566f74696e6720706572696f642068617320656e6465640000000000000000005f82015250565b5f610ed0601783610e8c565b9150610edb82610e9c565b602082019050919050565b5f6020820190508181035f830152610efd81610ec4565b9050919050565b5f610f126020840184610b3a565b905092915050565b5f82905092915050565b82818337505050565b610f3a6101008383610f24565b5050565b6101a08201610f4f5f830183610f04565b610f5b5f850182610c4c565b50610f696020830183610f04565b610f766020850182610c4c565b50610f846040830183610f04565b610f916040850182610c4c565b50610f9f6060830183610f04565b610fac6060850182610c4c565b50610fba6080830183610f04565b610fc76080850182610c4c565b50610fd560a0830183610f1a565b610fe260a0850182610f2d565b50505050565b5f6101c082019050610ffc5f830185610a11565b6110096020830184610f3e565b9392505050565b61101981610d24565b8114611023575f5ffd5b50565b5f8151905061103481611010565b92915050565b5f6020828403121561104f5761104e610a39565b5b5f61105c84828501611026565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806110d657607f821691505b6020821081036110e9576110e8611092565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261114b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611110565b6111558683611110565b95508019841693508086168417925050509392505050565b5f61118761118261117d84610a08565b610dda565b610a08565b9050919050565b5f819050919050565b6111a08361116d565b6111b46111ac8261118e565b84845461111c565b825550505050565b5f5f905090565b6111cb6111bc565b6111d6818484611197565b505050565b5b818110156111f9576111ee5f826111c3565b6001810190506111dc565b5050565b601f82111561123e5761120f816110ef565b61121884611101565b81016020851015611227578190505b61123b61123385611101565b8301826111db565b50505b505050565b5f82821c905092915050565b5f61125e5f1984600802611243565b1980831691505092915050565b5f611276838361124f565b9150826002028217905092915050565b61128f82610b79565b67ffffffffffffffff8111156112a8576112a7611065565b5b6112b282546110bf565b6112bd8282856111fd565b5f60209050601f8311600181146112ee575f84156112dc578287015190505b6112e6858261126b565b86555061134d565b601f1984166112fc866110ef565b5f5b82811015611323578489015182556001820191506020850194506020810190506112fe565b86831015611340578489015161133c601f89168261124f565b8355505b6001600288020188555050505b505050505050565b828183375f83830152505050565b5f61136e8385610b83565b935061137b838584611355565b61138483610ba1565b840190509392505050565b5f6020820190508181035f8301526113a8818486611363565b90509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113e882610a08565b91506113f383610a08565b925082820190508082111561140b5761140a6113b1565b5b92915050565b7f4e6f742066696e616c697a6564000000000000000000000000000000000000005f82015250565b5f611445600d83610e8c565b915061145082611411565b602082019050919050565b5f6020820190508181035f83015261147281611439565b9050919050565b7f54696d656c6f636b2064656c617920686173206e6f7420656c617073656400005f82015250565b5f6114ad601e83610e8c565b91506114b882611479565b602082019050919050565b5f6020820190508181035f8301526114da816114a1565b9050919050565b7f54616c6c7920616c72656164792066696e616c697a65640000000000000000005f82015250565b5f611515601783610e8c565b9150611520826114e1565b602082019050919050565b5f6020820190508181035f83015261154281611509565b9050919050565b5f60408201905061155c5f830185610a11565b6115696020830184610a11565b939250505056fea2646970667358221220859387508b2474aefa3ec0375073297a5ac7294f09aa001fac46dbaa65cb089464736f6c634300081c0033";

  
      type SemaphoreCicadaConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: SemaphoreCicadaConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class SemaphoreCicada__factory extends ContractFactory {
    
      constructor(...args: SemaphoreCicadaConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_semaphore: AddressLike, _groupId: BigNumberish, _votingDurationSeconds: BigNumberish, _timelockDelaySeconds: BigNumberish, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_semaphore, _groupId, _votingDurationSeconds, _timelockDelaySeconds, overrides || {});
    };
    override deploy(_semaphore: AddressLike, _groupId: BigNumberish, _votingDurationSeconds: BigNumberish, _timelockDelaySeconds: BigNumberish, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_semaphore, _groupId, _votingDurationSeconds, _timelockDelaySeconds, overrides || {}) as Promise<SemaphoreCicada & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): SemaphoreCicada__factory {
      return super.connect(runner) as SemaphoreCicada__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): SemaphoreCicadaInterface {
      return new Interface(_abi) as SemaphoreCicadaInterface;
    }
    
    override attach(address: string | Addressable): SemaphoreCicada {
      return super.attach(address) as SemaphoreCicada;
    }
  static connect(address: string, runner?: ContractRunner | null): SemaphoreCicada {
      return new Contract(address, _abi, runner) as unknown as SemaphoreCicada;
    }
  }

  
  