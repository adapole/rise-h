/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { MintController, MintControllerInterface } from "../../../voting/MintController.sol/MintController.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_token",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "_verifier",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [],
    "name": "lastPegUpdate",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes",
        "name": "query",
        "type": "bytes"
      },
      {
        "internalType": "bytes",
        "name": "proof",
        "type": "bytes"
      },
      {
        "internalType": "uint64",
        "name": "amount",
        "type": "uint64"
      }
    ],
    "name": "mintWithProof",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "timelock",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "token",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "newPeg",
        "type": "uint256"
      }
    ],
    "name": "updatePeg",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "name": "usedProofs",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "verifier",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608060405262015180600355348015610016575f5ffd5b50604051610f40380380610f408339818101604052810190610038919061011c565b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505061015a565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100eb826100c2565b9050919050565b6100fb816100e1565b8114610105575f5ffd5b50565b5f81519050610116816100f2565b92915050565b5f5f60408385031215610132576101316100be565b5b5f61013f85828601610108565b925050602061015085828601610108565b9150509250929050565b610dd9806101675f395ff3fe608060405234801561000f575f5ffd5b506004361061007b575f3560e01c80639fed232b116100595780639fed232b146100d7578063c30a0f25146100f3578063d33219b414610123578063fc0c546a146101415761007b565b80632b7ac3f31461007f5780634fa542811461009d5780636d299aa3146100b9575b5f5ffd5b61008761015f565b6040516100949190610509565b60405180910390f35b6100b760048036038101906100b291906105d1565b610184565b005b6100c1610473565b6040516100ce919061067a565b60405180910390f35b6100f160048036038101906100ec91906106bd565b610479565b005b61010d6004803603810190610108919061071b565b610483565b60405161011a9190610760565b60405180910390f35b61012b6104a0565b604051610138919061067a565b60405180910390f35b6101496104a6565b6040516101569190610509565b60405180910390f35b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f83836040516101959291906107b5565b6040518091039020905060045f8281526020019081526020015f205f9054906101000a900460ff16156101fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f490610827565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344708b3e888888886040518563ffffffff1660e01b815260040161025e9493929190610891565b6020604051808303815f875af115801561027a573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029e91906108f4565b9050806102e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d790610969565b60405180910390fd5b6003546002546102f091906109b4565b4211610331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032890610a31565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663278e0b885f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16855f67ffffffffffffffff8111156103a9576103a8610a4f565b5b6040519080825280602002602001820160405280156103dc57816020015b60608152602001906001900390816103c75790505b506040518463ffffffff1660e01b81526004016103fb93929190610ba6565b5f604051808303815f875af1158015610416573d5f5f3e3d5ffd5b505050506040513d5f823e3d601f19601f8201168201806040525081019061043e9190610d37565b505050600160045f8481526020019081526020015f205f6101000a81548160ff02191690831515021790555050505050505050565b60025481565b4260028190555050565b6004602052805f5260405f205f915054906101000a900460ff1681565b60035481565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6104f3826104ca565b9050919050565b610503816104e9565b82525050565b5f60208201905061051c5f8301846104fa565b92915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261055457610553610533565b5b8235905067ffffffffffffffff81111561057157610570610537565b5b60208301915083600182028301111561058d5761058c61053b565b5b9250929050565b5f67ffffffffffffffff82169050919050565b6105b081610594565b81146105ba575f5ffd5b50565b5f813590506105cb816105a7565b92915050565b5f5f5f5f5f606086880312156105ea576105e961052b565b5b5f86013567ffffffffffffffff8111156106075761060661052f565b5b6106138882890161053f565b9550955050602086013567ffffffffffffffff8111156106365761063561052f565b5b6106428882890161053f565b93509350506040610655888289016105bd565b9150509295509295909350565b5f819050919050565b61067481610662565b82525050565b5f60208201905061068d5f83018461066b565b92915050565b61069c81610662565b81146106a6575f5ffd5b50565b5f813590506106b781610693565b92915050565b5f602082840312156106d2576106d161052b565b5b5f6106df848285016106a9565b91505092915050565b5f819050919050565b6106fa816106e8565b8114610704575f5ffd5b50565b5f81359050610715816106f1565b92915050565b5f602082840312156107305761072f61052b565b5b5f61073d84828501610707565b91505092915050565b5f8115159050919050565b61075a81610746565b82525050565b5f6020820190506107735f830184610751565b92915050565b5f81905092915050565b828183375f83830152505050565b5f61079c8385610779565b93506107a9838584610783565b82840190509392505050565b5f6107c1828486610791565b91508190509392505050565b5f82825260208201905092915050565b7f50726f6f662072657573656400000000000000000000000000000000000000005f82015250565b5f610811600c836107cd565b915061081c826107dd565b602082019050919050565b5f6020820190508181035f83015261083e81610805565b9050919050565b5f82825260208201905092915050565b5f601f19601f8301169050919050565b5f6108708385610845565b935061087d838584610783565b61088683610855565b840190509392505050565b5f6040820190508181035f8301526108aa818688610865565b905081810360208301526108bf818486610865565b905095945050505050565b6108d381610746565b81146108dd575f5ffd5b50565b5f815190506108ee816108ca565b92915050565b5f602082840312156109095761090861052b565b5b5f610916848285016108e0565b91505092915050565b7f496e76616c696420506f53514c2070726f6f66000000000000000000000000005f82015250565b5f6109536013836107cd565b915061095e8261091f565b602082019050919050565b5f6020820190508181035f83015261098081610947565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109be82610662565b91506109c983610662565b92508282019050808211156109e1576109e0610987565b5b92915050565b7f5065672074696d656c6f636b20616374697665000000000000000000000000005f82015250565b5f610a1b6013836107cd565b9150610a26826109e7565b602082019050919050565b5f6020820190508181035f830152610a4881610a0f565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610a8581610594565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f610ae682610ab4565b610af08185610abe565b9350610b00818560208601610ace565b610b0981610855565b840191505092915050565b5f610b1f8383610adc565b905092915050565b5f602082019050919050565b5f610b3d82610a8b565b610b478185610a95565b935083602082028501610b5985610aa5565b805f5b85811015610b945784840389528151610b758582610b14565b9450610b8083610b27565b925060208a01995050600181019050610b5c565b50829750879550505050505092915050565b5f606082019050610bb95f8301866104fa565b610bc66020830185610a7c565b8181036040830152610bd88184610b33565b9050949350505050565b5f8160070b9050919050565b610bf781610be2565b8114610c01575f5ffd5b50565b5f81519050610c1281610bee565b92915050565b5f81519050610c26816105a7565b92915050565b610c3582610855565b810181811067ffffffffffffffff82111715610c5457610c53610a4f565b5b80604052505050565b5f610c66610522565b9050610c728282610c2c565b919050565b5f67ffffffffffffffff821115610c9157610c90610a4f565b5b602082029050602081019050919050565b5f610cb4610caf84610c77565b610c5d565b90508083825260208201905060208402830185811115610cd757610cd661053b565b5b835b81811015610d005780610cec8882610c04565b845260208401935050602081019050610cd9565b5050509392505050565b5f82601f830112610d1e57610d1d610533565b5b8151610d2e848260208601610ca2565b91505092915050565b5f5f5f60608486031215610d4e57610d4d61052b565b5b5f610d5b86828701610c04565b9350506020610d6c86828701610c18565b925050604084015167ffffffffffffffff811115610d8d57610d8c61052f565b5b610d9986828701610d0a565b915050925092509256fea26469706673582212207846f790fd9ef1a484a47d3f1a7284fbf2d89db98c57ca9a4ff8cfc202e1b48364736f6c634300081c0033";

  
      type MintControllerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: MintControllerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class MintController__factory extends ContractFactory {
    
      constructor(...args: MintControllerConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_token: AddressLike, _verifier: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_token, _verifier, overrides || {});
    };
    override deploy(_token: AddressLike, _verifier: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_token, _verifier, overrides || {}) as Promise<MintController & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): MintController__factory {
      return super.connect(runner) as MintController__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): MintControllerInterface {
      return new Interface(_abi) as MintControllerInterface;
    }
    
    override attach(address: string | Addressable): MintController {
      return super.attach(address) as MintController;
    }
  static connect(address: string, runner?: ContractRunner | null): MintController {
      return new Contract(address, _abi, runner) as unknown as MintController;
    }
  }

  
  